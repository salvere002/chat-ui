@import 'tailwindcss';
@import 'katex/dist/katex.min.css';

/* Custom color classes using CSS variables */
.bg-bg-primary { background-color: var(--color-bg-primary) !important; }
.bg-bg-secondary { background-color: var(--color-bg-secondary) !important; }
.bg-bg-tertiary { background-color: var(--color-bg-tertiary) !important; }
.bg-bg-elevated { background-color: var(--color-bg-elevated) !important; }

.text-text-primary { color: var(--color-text-primary) !important; }
.text-text-secondary { color: var(--color-text-secondary) !important; }
.text-text-tertiary { color: var(--color-text-tertiary) !important; }
.text-text-inverse { color: var(--color-text-inverse) !important; }

.border-border-primary { border-color: var(--color-border-primary) !important; }
.border-border-secondary { border-color: var(--color-border-secondary) !important; }
.border-border-focus { border-color: var(--color-border-focus) !important; }

.bg-accent-primary { background-color: var(--color-accent-primary) !important; }
.bg-accent-hover { background-color: var(--color-accent-hover) !important; }
.bg-accent-light { background-color: var(--color-accent-light) !important; }
.text-accent-primary { color: var(--color-accent-primary) !important; }

.bg-error { background-color: var(--color-error) !important; }
.bg-success { background-color: var(--color-success) !important; }
.text-error { color: var(--color-error) !important; }
.text-success { color: var(--color-success) !important; }

/* Hover states */
.hover\:bg-bg-tertiary:hover { background-color: var(--color-bg-tertiary) !important; }
.hover\:bg-accent-hover:hover { background-color: var(--color-accent-hover) !important; }
.hover\:bg-accent-light:hover { background-color: var(--color-accent-light) !important; }
.hover\:bg-accent-primary:hover { background-color: var(--color-accent-primary) !important; }
.hover\:text-accent-primary:hover { color: var(--color-accent-primary) !important; }
.hover\:text-text-primary:hover { color: var(--color-text-primary) !important; }
.hover\:text-text-inverse:hover { color: var(--color-text-inverse) !important; }
.hover\:border-accent-primary:hover { border-color: var(--color-accent-primary) !important; }
.hover\:border-text-tertiary:hover { border-color: var(--color-text-tertiary) !important; }

/* Focus states */
.focus\:bg-bg-primary:focus { background-color: var(--color-bg-primary) !important; }
.focus\:border-border-focus:focus { border-color: var(--color-border-focus) !important; }
.focus-within\:bg-bg-primary:focus-within { background-color: var(--color-bg-primary) !important; }
.focus-within\:border-border-focus:focus-within { border-color: var(--color-border-focus) !important; }

/* Group hover states */
.group:hover .group-hover\:opacity-100 { opacity: 1 !important; }

/* Custom z-index */
.z-dropdown { z-index: 100 !important; }
.z-sticky { z-index: 200 !important; }
.z-modal { z-index: 500 !important; }
.z-tooltip { z-index: 700 !important; }

/* Custom animations */
.animate-fade-in { animation: fadeIn 200ms ease-out; }
.animate-slide-up { animation: slideUp 200ms ease-out; }
.animate-slide-down { animation: slideDown 200ms ease-out; }
.animate-message-slide { animation: messageSlide 200ms ease-out; }
.animate-pulse-dot { animation: dotPulse 1.4s ease-in-out infinite; }
.animate-error-pulse { animation: errorPulse 2s ease-in-out infinite; }
.animate-check-mark { animation: checkmark 200ms ease-out; }

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideDown {
  from { opacity: 0; transform: translateY(-10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes messageSlide {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes dotPulse {
  0%, 80%, 100% { opacity: 0.3; transform: scale(0.8); }
  40% { opacity: 1; transform: scale(1); }
}

@keyframes errorPulse {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.05); opacity: 0.8; }
}

@keyframes checkmark {
  from { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
  to { opacity: 1; transform: translate(-50%, -50%) scale(1); }
}

/* Keep only CSS variables for theming */
:root {
  /* Core Design Tokens - Modern system fonts */
  --font-primary: system-ui, sans-serif;
  --font-mono: ui-monospace, monospace;
  
  /* Light Theme Colors */
  --color-bg-primary: #FFFFFF;
  --color-bg-secondary: #F8F9FA;
  --color-bg-tertiary: #F1F3F5;
  --color-bg-elevated: #FFFFFF;
  
  --color-text-primary: #212529;
  --color-text-secondary: #495057;
  --color-text-tertiary: #868E96;
  --color-text-inverse: #FFFFFF;
  
  --color-border-primary: #DEE2E6;
  --color-border-secondary: #E9ECEF;
  --color-border-focus: #4263EB;
  
  --color-accent-primary: #4263EB;
  --color-accent-hover: #364FC7;
  --color-accent-active: #2C41A3;
  --color-accent-light: #E7F5FF;
  
  --color-success: #51CF66;
  --color-warning: #FFD43B;
  --color-error: #FF6B6B;
  --color-info: #4DABF7;

  /* Code block and token colors (light) */
  --code-bg: var(--color-bg-secondary);
  --code-fg: var(--color-text-primary);
  --code-token-comment: #6a737d;
  --code-token-punctuation: var(--color-text-primary);
  --code-token-property: #005cc5;
  --code-token-tag: #228be6;
  --code-token-boolean: #005cc5;
  --code-token-number: #005cc5;
  --code-token-constant: #0b7285;
  --code-token-selector: #e36209;
  --code-token-attr-name: #6f42c1;
  --code-token-string: #22863a;
  --code-token-builtin: #005cc5;
  --code-token-deleted: #d73a49;
  --code-token-operator: var(--color-text-primary);
  --code-token-entity: #228be6;
  --code-token-atrule: #6f42c1;
  --code-token-keyword: #6f42c1;
  --code-token-function: #005cc5;
  --code-token-class-name: #e36209;
  --code-token-variable: var(--color-text-primary);
  --code-token-regex: #d73a49;
  --code-token-important: #d73a49;

  /* Chart colors (light) */
  --chart-text: #374151;
  --chart-grid: #e5e7eb;
  --chart-bg: #ffffff;
}

/* Dark Theme */
.dark-theme {
  --color-bg-primary: #1A1B1E;
  --color-bg-secondary: #25262B;
  --color-bg-tertiary: #2C2E33;
  --color-bg-elevated: #2C2E33;
  
  --color-text-primary: #FFFFFF;
  --color-text-secondary: #C1C2C5;
  --color-text-tertiary: #909296;
  --color-text-inverse: #1A1B1E;
  
  --color-border-primary: #373A40;
  --color-border-secondary: #2C2E33;
  --color-border-focus: #5C7CFA;
  
  --color-accent-primary: #5C7CFA;
  --color-accent-hover: #4C6EF5;
  --color-accent-active: #3B5BDB;
  --color-accent-light: rgba(92, 124, 250, 0.1);
  
  --color-success: #51CF66;
  --color-warning: #FFD43B;
  --color-error: #FA5252;
  --color-info: #4DABF7;

  /* Code block and token colors (dark) */
  --code-bg: var(--color-bg-secondary);
  --code-fg: var(--color-text-primary);
  --code-token-comment: #6a9955;
  --code-token-punctuation: #d4d4d4;
  --code-token-property: #9cdcfe;
  --code-token-tag: #569cd6;
  --code-token-boolean: #569cd6;
  --code-token-number: #b5cea8;
  --code-token-constant: #9cdcfe;
  --code-token-selector: #d7ba7d;
  --code-token-attr-name: #9cdcfe;
  --code-token-string: #ce9178;
  --code-token-builtin: #ce9178;
  --code-token-deleted: #ce9178;
  --code-token-operator: #d4d4d4;
  --code-token-entity: #569cd6;
  --code-token-atrule: #ce9178;
  --code-token-keyword: #569cd6;
  --code-token-function: #dcdcaa;
  --code-token-class-name: #4ec9b0;
  --code-token-variable: #9cdcfe;
  --code-token-regex: #d16969;
  --code-token-important: #569cd6;

  /* Chart colors (dark) */
  --chart-text: #e2e8f0;
  --chart-grid: #374151;
  --chart-bg: #1f2937;
}

/* Cross-browser scrollbar styles */
/* Modern browsers (Firefox 64+) */
* {
  scrollbar-width: thin;
  scrollbar-color: var(--color-border-primary) transparent;
}

/* Webkit browsers (Chrome, Edge, Safari) */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

::-webkit-scrollbar-thumb {
  background: var(--color-border-primary);
  border-radius: 9999px;
  transition: background 150ms ease;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--color-text-tertiary);
}

/* Chrome/Edge native overlay scrollbars */
html {
  overflow-overlay: auto;
}

/* Optimize for Windows ClearType rendering */
@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: none) {
  body {
    font-smoothing: auto;
    -webkit-font-smoothing: auto;
    -moz-osx-font-smoothing: auto;
  }
}

/* Loading dots animation helper */
.loading-dots::before {
  content: '';
  animation-delay: -0.32s;
}

.loading-dots span {
  animation-delay: -0.16s;
}

/* Enhanced prose styling for better text wrapping */
.prose {
  word-wrap: break-word;
  overflow-wrap: anywhere;
  word-break: break-word;
}

.prose * {
  max-width: 100%;
  overflow-wrap: anywhere;
}

.prose p, .prose div, .prose span {
  word-wrap: break-word;
  overflow-wrap: anywhere;
}

.prose code {
  word-wrap: break-word;
  overflow-wrap: anywhere;
  white-space: pre-wrap;
}

.prose pre {
  overflow-x: auto;
  word-wrap: normal;
  overflow-wrap: normal;
}

.prose pre code {
  white-space: pre;
  word-wrap: normal;
  overflow-wrap: normal;
}

/* Trim top/bottom spacing inside message bubbles for tighter layout */
.message-bubble .prose > :first-child { margin-top: 0 !important; }
.message-bubble .prose > :last-child { margin-bottom: 0 !important; }

/* Ensure lists render with markers and readable spacing */
.prose ul {
  list-style: disc;
  padding-left: 1.5rem;
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose ol {
  list-style: decimal;
  padding-left: 1.5rem;
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose li {
  margin-top: 0.25em;
  margin-bottom: 0.25em;
}

/* Add minimal paragraph spacing if typography plugin styles are unavailable */
.prose p {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

/* Disable transitions/animations during theme switch to avoid "waterfall" */
.theme-changing, .theme-changing * {
  transition: none !important;
  transition-delay: 0ms !important;
  animation: none !important;
}
